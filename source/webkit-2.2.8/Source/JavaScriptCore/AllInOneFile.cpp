/*
 * Copyright (C) 2010, 2011 Apple Inc. All Rights Reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */

// This all-in-one cpp file cuts down on template bloat to allow us to build our Windows release build.

#include "API/JSBase.cpp"
#include "API/JSCTestRunnerUtils.cpp"
#include "API/JSCallbackConstructor.cpp"
#include "API/JSCallbackFunction.cpp"
#include "API/JSCallbackObject.cpp"
#include "API/JSClassRef.cpp"
#include "API/JSContextRef.cpp"
#include "API/JSObjectRef.cpp"
#include "API/JSScriptRef.cpp"
#include "API/JSStringRef.cpp"
#include "API/JSValueRef.cpp"
#include "API/OpaqueJSString.cpp"
#include "assembler/ARMAssembler.cpp"
#include "assembler/ARMv7Assembler.cpp"
#include "assembler/LinkBuffer.cpp"
#include "assembler/MacroAssembler.cpp"
#include "assembler/MacroAssemblerARM.cpp"
#include "assembler/MacroAssemblerX86Common.cpp"
#include "bytecode/ArrayAllocationProfile.cpp"
#include "bytecode/ArrayProfile.cpp"
#include "bytecode/CallLinkInfo.cpp"
#include "bytecode/CallLinkStatus.cpp"
#include "bytecode/CodeType.cpp"
#include "bytecode/CodeBlock.cpp"
#include "bytecode/CodeBlockHash.cpp"
#include "bytecode/CodeOrigin.cpp"
#include "bytecode/DFGExitProfile.cpp"
#include "bytecode/DeferredCompilationCallback.cpp"
#include "bytecode/ExecutionCounter.cpp"
#include "bytecode/ExitKind.cpp"
#include "bytecode/GetByIdStatus.cpp"
#include "bytecode/JumpTable.cpp"
#include "bytecode/LazyOperandValueProfile.cpp"
#include "bytecode/MethodOfGettingAValueProfile.cpp"
#include "bytecode/Opcode.cpp"
#include "bytecode/PolymorphicPutByIdList.cpp"
#include "bytecode/PreciseJumpTargets.cpp"
#include "bytecode/SpeculatedType.cpp"
#include "bytecode/PutByIdStatus.cpp"
#include "bytecode/ReduceWhitespace.cpp"
#include "bytecode/SamplingTool.cpp"
#include "bytecode/SpecialPointer.cpp"
#include "bytecode/StructureStubInfo.cpp"
#include "bytecode/StructureStubClearingWatchpoint.cpp"
#include "bytecode/UnlinkedCodeBlock.cpp"
#include "bytecode/Watchpoint.cpp"
#include "bytecompiler/BytecodeGenerator.cpp"
#include "bytecompiler/NodesCodegen.cpp"
#include "dfg/DFGAbstractHeap.cpp"
#include "dfg/DFGAbstractValue.cpp"
#include "dfg/DFGArgumentsSimplificationPhase.cpp"
#include "dfg/DFGArrayMode.cpp"
#include "dfg/DFGAssemblyHelpers.cpp"
#include "dfg/DFGAtTailAbstractState.cpp"
#include "dfg/DFGBackwardsPropagationPhase.cpp"
#include "dfg/DFGBasicBlock.cpp"
#include "dfg/DFGBinarySwitch.cpp"
#include "dfg/DFGBlockInsertionSet.cpp"
#include "dfg/DFGByteCodeParser.cpp"
#include "dfg/DFGCFGSimplificationPhase.cpp"
#include "dfg/DFGCapabilities.cpp"
#include "dfg/DFGCFAPhase.cpp"
#include "dfg/DFGCPSRethreadingPhase.cpp"
#include "dfg/DFGClobberize.cpp"
#include "dfg/DFGClobberSet.cpp"
#include "dfg/DFGCommon.cpp"
#include "dfg/DFGCommonData.cpp"
#include "dfg/DFGConstantFoldingPhase.cpp"
#include "dfg/DFGCriticalEdgeBreakingPhase.cpp"
#include "dfg/DFGCSEPhase.cpp"
#include "dfg/DFGDCEPhase.cpp"
#include "dfg/DFGDesiredIdentifiers.cpp"
#include "dfg/DFGDesiredStructureChains.cpp"
#include "dfg/DFGDesiredTransitions.cpp"
#include "dfg/DFGDesiredWatchpoints.cpp"
#include "dfg/DFGDesiredWeakReferences.cpp"
#include "dfg/DFGDesiredWriteBarriers.cpp"
#include "dfg/DFGDisassembler.cpp"
#include "dfg/DFGDominators.cpp"
#include "dfg/DFGDriver.cpp"
#include "dfg/DFGEdge.cpp"
#include "dfg/DFGFailedFinalizer.cpp"
#include "dfg/DFGFinalizer.cpp"
#include "dfg/DFGFixupPhase.cpp"
#include "dfg/DFGFlushFormat.cpp"
#include "dfg/DFGFlushLivenessAnalysisPhase.cpp"
#include "dfg/DFGGraph.cpp"
#include "dfg/DFGInPlaceAbstractState.cpp"
#include "dfg/DFGJITCode.cpp"
#include "dfg/DFGJITCompiler.cpp"
#include "dfg/DFGJITFinalizer.cpp"
#include "dfg/DFGLICMPhase.cpp"
#include "dfg/DFGLazyJSValue.cpp"
#include "dfg/DFGLivenessAnalysisPhase.cpp"
#include "dfg/DFGLongLivedState.cpp"
#include "dfg/DFGLoopPreHeaderCreationPhase.cpp"
#include "dfg/DFGMinifiedNode.cpp"
#include "dfg/DFGNaturalLoops.cpp"
#include "dfg/DFGNode.cpp"
#include "dfg/DFGNodeFlags.cpp"
#include "dfg/DFGOperations.cpp"
#include "dfg/DFGOSRAvailabilityAnalysisPhase.cpp"
#include "dfg/DFGOSREntry.cpp"
#include "dfg/DFGOSRExitCompiler32_64.cpp"
#include "dfg/DFGOSRExitCompiler64.cpp"
#include "dfg/DFGOSRExitCompiler.cpp"
#include "dfg/DFGOSRExitCompilerCommon.cpp"
#include "dfg/DFGOSRExit.cpp"
#include "dfg/DFGOSRExitBase.cpp"
#include "dfg/DFGOSRExitJumpPlaceholder.cpp"
#include "dfg/DFGOSRExitPreparation.cpp"
#include "dfg/DFGPhase.cpp"
#include "dfg/DFGPlan.cpp"
#include "dfg/DFGPredictionInjectionPhase.cpp"
#include "dfg/DFGPredictionPropagationPhase.cpp"
#include "dfg/DFGRepatch.cpp"
#include "dfg/DFGSpeculativeJIT32_64.cpp"
#include "dfg/DFGSpeculativeJIT64.cpp"
#include "dfg/DFGSpeculativeJIT.cpp"
#include "dfg/DFGSSAConversionPhase.cpp"
#include "dfg/DFGThunks.cpp"
#include "dfg/DFGTypeCheckHoistingPhase.cpp"
#include "dfg/DFGUnificationPhase.cpp"
#include "dfg/DFGUseKind.cpp"
#include "dfg/DFGValidate.cpp"
#include "dfg/DFGValueSource.cpp"
#include "dfg/DFGVariableAccessDataDump.cpp"
#include "dfg/DFGVariableEvent.cpp"
#include "dfg/DFGVariableEventStream.cpp"
#include "dfg/DFGVirtualRegisterAllocationPhase.cpp"
#include "dfg/DFGWorklist.cpp"
#include "disassembler/Disassembler.cpp"
#include "heap/CopiedSpace.cpp"
#include "heap/CopyVisitor.cpp"
#include "heap/ConservativeRoots.cpp"
#include "heap/DFGCodeBlocks.cpp"
#include "heap/HandleSet.cpp"
#include "heap/HeapTimer.cpp"
#include "heap/IncrementalSweeper.cpp"
#include "heap/SlotVisitor.cpp"
#include "heap/HandleStack.cpp"
#include "heap/BlockAllocator.cpp"
#include "heap/GCThreadSharedData.cpp"
#include "heap/GCThread.cpp"
#include "heap/Heap.cpp"
#include "heap/HeapStatistics.cpp"
#include "heap/JITStubRoutineSet.cpp"
#include "heap/MachineStackMarker.cpp"
#include "heap/MarkStack.cpp"
#include "heap/MarkedAllocator.cpp"
#include "heap/MarkedBlock.cpp"
#include "heap/MarkedSpace.cpp"
#include "heap/SuperRegion.cpp"
#include "heap/VTableSpectrum.cpp"
#include "heap/Weak.cpp"
#include "heap/WeakBlock.cpp"
#include "heap/WeakHandleOwner.cpp"
#include "heap/WeakSet.cpp"
#include "heap/WriteBarrierSupport.cpp"
#include "debugger/DebuggerActivation.cpp"
#include "debugger/DebuggerCallFrame.cpp"
#include "debugger/Debugger.cpp"
#include "interpreter/AbstractPC.cpp"
#include "interpreter/CallFrame.cpp"
#include "interpreter/Interpreter.cpp"
#include "interpreter/JSStack.cpp"
#include "interpreter/StackIterator.cpp"
#include "interpreter/VMInspector.cpp"
#include "jit/ClosureCallStubRoutine.cpp"
#include "jit/ExecutableAllocator.cpp"
#include "jit/ExecutableAllocatorFixedVMPool.cpp"
#include "jit/GCAwareJITStubRoutine.cpp"
#include "jit/HostCallReturnValue.cpp"
#include "jit/JITArithmetic32_64.cpp"
#include "jit/JITArithmetic.cpp"
#include "jit/JITCall32_64.cpp"
#include "jit/JITCall.cpp"
#include "jit/JITCode.cpp"
#include "jit/JITDisassembler.cpp"
#include "jit/JIT.cpp"
#include "jit/JITExceptions.cpp"
#include "jit/JITOpcodes32_64.cpp"
#include "jit/JITOpcodes.cpp"
#include "jit/JITPropertyAccess32_64.cpp"
#include "jit/JITPropertyAccess.cpp"
#include "jit/JITStubRoutine.cpp"
#include "jit/JITStubs.cpp"
#include "jit/JITThunks.cpp"
#include "jit/JITToDFGDeferredCompilationCallback.cpp"
#include "jit/JumpReplacementWatchpoint.cpp"
#include "jit/ThunkGenerators.cpp"
#include "llint/LLIntCLoop.cpp"
#include "llint/LLIntData.cpp"
#include "llint/LLIntEntrypoints.cpp"
#include "llint/LLIntExceptions.cpp"
#include "llint/LLIntSlowPaths.cpp"
#include "llint/LLIntThunks.cpp"
#include "llint/LowLevelInterpreter.cpp"
#include "parser/Lexer.cpp"
#include "parser/Nodes.cpp"
#include "parser/ParserArena.cpp"
#include "parser/Parser.cpp"
#include "parser/#include "Code.cpp"
#include "parser/#include "Provider.cpp"
#include "parser/#include "ProviderCache.cpp"
#include "profiler/ProfilerBytecode.cpp"
#include "profiler/ProfilerBytecodeSequence.cpp"
#include "profiler/ProfilerBytecodes.cpp"
#include "profiler/ProfilerCompilation.cpp"
#include "profiler/ProfilerCompilationKind.cpp"
#include "profiler/ProfilerCompiledBytecode.cpp"
#include "profiler/ProfilerDatabase.cpp"
#include "profiler/ProfilerOrigin.cpp"
#include "profiler/ProfilerOriginStack.cpp"
#include "profiler/ProfilerOSRExit.cpp"
#include "profiler/ProfilerOSRExitSite.cpp"
#include "profiler/ProfilerProfiledBytecodes.cpp"
#include "profiler/Profile.cpp"
#include "profiler/ProfileGenerator.cpp"
#include "profiler/ProfileNode.cpp"
#include "profiler/LegacyProfiler.cpp"
#include "runtime/ArgList.cpp"
#include "runtime/Arguments.cpp"
#include "runtime/ArrayBuffer.cpp"
#include "runtime/ArrayBufferView.cpp"
#include "runtime/ArrayConstructor.cpp"
#include "runtime/ArrayPrototype.cpp"
#include "runtime/BooleanConstructor.cpp"
#include "runtime/BooleanObject.cpp"
#include "runtime/BooleanPrototype.cpp"
#include "runtime/CallData.cpp"
#include "runtime/CodeCache.cpp"
#include "runtime/CodeSpecializationKind.cpp"
#include "runtime/CommonIdentifiers.cpp"
#include "runtime/CommonSlowPathsExceptions.cpp"
#include "runtime/CommonSlowPaths.cpp"
#include "runtime/CompilationResult.cpp"
#include "runtime/Completion.cpp"
#include "runtime/ConstructData.cpp"
#include "runtime/DataView.cpp"
#include "runtime/DateConstructor.cpp"
#include "runtime/DateConversion.cpp"
#include "runtime/DateInstance.cpp"
#include "runtime/DatePrototype.cpp"
#include "runtime/DumpContext.cpp"
#include "runtime/ErrorConstructor.cpp"
#include "runtime/Error.cpp"
#include "runtime/ErrorInstance.cpp"
#include "runtime/ErrorPrototype.cpp"
#include "runtime/ExceptionHelpers.cpp"
#include "runtime/Executable.cpp"
#include "runtime/FunctionConstructor.cpp"
#include "runtime/FunctionExecutableDump.cpp"
#include "runtime/FunctionPrototype.cpp"
#include "runtime/GCActivityCallback.cpp"
#include "runtime/GetterSetter.cpp"
#include "runtime/Identifier.cpp"
#include "runtime/IndexingType.cpp"
#include "runtime/InitializeThreading.cpp"
#include "runtime/IntendedStructureChain.cpp"
#include "runtime/InternalFunction.cpp"
#include "runtime/JSActivation.cpp"
#include "runtime/JSAPIValueWrapper.cpp"
#include "runtime/JSArray.cpp"
#include "runtime/JSArrayBuffer.cpp"
#include "runtime/JSArrayBufferConstructor.cpp"
#include "runtime/JSArrayBufferPrototype.cpp"
#include "runtime/JSArrayBufferView.cpp"
#include "runtime/JSCell.cpp"
#include "runtime/JSDataView.cpp"
#include "runtime/JSDataViewPrototype.cpp"
#include "runtime/JSDateMath.cpp"
#include "runtime/JSFunction.cpp"
#include "runtime/JSBoundFunction.cpp"
#include "runtime/VM.cpp"
#include "runtime/JSGlobalObject.cpp"
#include "runtime/JSGlobalObjectFunctions.cpp"
#include "runtime/JSProxy.cpp"
#include "runtime/JSLock.cpp"
#include "runtime/JSNotAnObject.cpp"
#include "runtime/JSObject.cpp"
#include "runtime/JSONObject.cpp"
#include "runtime/JSPropertyNameIterator.cpp"
#include "runtime/JSSegmentedVariableObject.cpp"
#include "runtime/JSTypedArrayConstructors.cpp"
#include "runtime/JSTypedArrayPrototypes.cpp"
#include "runtime/JSTypedArrays.cpp"
#include "runtime/JSWithScope.cpp"
#include "runtime/JSNameScope.cpp"
#include "runtime/JSScope.cpp"
#include "runtime/JSStringJoiner.cpp"
#include "runtime/JSString.cpp"
#include "runtime/JSSymbolTableObject.cpp"
#include "runtime/JSCJSValue.cpp"
#include "runtime/JSVariableObject.cpp"
#include "runtime/JSWrapperObject.cpp"
#include "runtime/LiteralParser.cpp"
#include "runtime/Lookup.cpp"
#include "runtime/MathObject.cpp"
#include "runtime/NameConstructor.cpp"
#include "runtime/NameInstance.cpp"
#include "runtime/NamePrototype.cpp"
#include "runtime/NativeErrorConstructor.cpp"
#include "runtime/NativeErrorPrototype.cpp"
#include "runtime/NumberConstructor.cpp"
#include "runtime/NumberObject.cpp"
#include "runtime/NumberPrototype.cpp"
#include "runtime/ObjectConstructor.cpp"
#include "runtime/ObjectPrototype.cpp"
#include "runtime/Operations.cpp"
#include "runtime/Options.cpp"
#include "runtime/PropertyDescriptor.cpp"
#include "runtime/PropertyNameArray.cpp"
#include "runtime/PropertySlot.cpp"
#include "runtime/PropertyTable.cpp"
#include "runtime/PrototypeMap.cpp"
#include "runtime/RegExpCache.cpp"
#include "runtime/RegExpConstructor.cpp"
#include "runtime/RegExp.cpp"
#include "runtime/RegExpMatchesArray.cpp"
#include "runtime/RegExpCachedResult.cpp"
#include "runtime/RegExpObject.cpp"
#include "runtime/RegExpPrototype.cpp"
#include "runtime/SamplingCounter.cpp"
#include "runtime/SimpleTypedArrayController.cpp"
#include "runtime/SmallStrings.cpp"
#include "runtime/SparseArrayValueMap.cpp"
#include "runtime/StrictEvalActivation.cpp"
#include "runtime/StringConstructor.cpp"
#include "runtime/StringObject.cpp"
#include "runtime/StringPrototype.cpp"
#include "runtime/StringRecursionChecker.cpp"
#include "runtime/StructureChain.cpp"
#include "runtime/Structure.cpp"
#include "runtime/StructureRareData.cpp"
#include "runtime/SymbolTable.cpp"
#include "runtime/TypedArrayController.cpp"
#include "runtime/TypedArrayType.cpp"
#include "runtime/Watchdog.cpp"
#include "runtime/WatchdogNone.cpp"
#include "tools/CodeProfile.cpp"
#include "tools/CodeProfiling.cpp"
#include "yarr/YarrCanonicalizeUCS2.cpp"
#include "yarr/YarrInterpreter.cpp"
#include "yarr/YarrJIT.cpp"
#include "yarr/YarrPattern.cpp"
#include "yarr/YarrSyntaxChecker.cpp"

